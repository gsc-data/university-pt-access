{"version":3,"sources":["components/barChart.js","components/Legend.js","components/rightBar.js","components/UniversityAccessMap.js","App.js","reportWebVitals.js","index.js"],"names":["LEGEND_COLORS","15","30","45","60","BAR_COLORS_BACKGROUND","key","join","BAR_COLORS_FILL","data","datasets","map","row","k","split","console","log","label","backgroundColor","borderColor","borderWidth","options","indexAxis","maintainAspectRatio","elements","bar","responsive","scales","x","ticks","callback","value","index","values","plugins","legend","position","display","title","text","BarChart","style","height","Legend","id","fontFamily","className","Object","keys","RightBar","fontSize","color","lineHeight","marginTop","href","INITIAL_VIEW_STATE","latitude","longitude","zoom","setDefaultCredentials","username","apiKey","AccessMap","layerAccess","CartoLayer","type","MAP_TYPES","QUERY","getFillColor","object","properties","tobreak","getLineColor","lineWidthMinPixels","pickable","layerUniversity","pointRadiusMinPixels","layerDistrict","width","initialViewState","getTooltip","uni_name","district","html","controller","layers","reuseMaps","mapStyle","BASEMAP","PRISTON","mapboxApiAccessToken","preventStyleDiffing","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c504dd7.chunk.js","sourcesContent":["\nimport React  from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport data from './data.json'\n\n//git remote add origin https://github.com/gsc-data/university-pt-access.git\nexport const LEGEND_COLORS = {\n  15: [102,194,165],\n  30:[252,141,98],\n  45: [141,160,203],\n  60:[231,138,195],\n};\nconst BAR_COLORS_BACKGROUND ={};\n\n\nfor (let key in LEGEND_COLORS){\n  BAR_COLORS_BACKGROUND[key] = `rgba(${LEGEND_COLORS[key].join()},1)`\n\n};\n\nconst BAR_COLORS_FILL ={};\n\nfor (let key in LEGEND_COLORS){\n  BAR_COLORS_FILL[key] = `rgba(${LEGEND_COLORS[key].join()},0.9)`\n\n};\n\n\ndata.datasets = data.datasets.map( row =>{\n  let k = row['label'].split(\" \")[0]\n  console.log(k);\n    return {...row,label:`${row.label} \\(%\\)`,backgroundColor:BAR_COLORS_FILL[k],borderColor:BAR_COLORS_BACKGROUND[k],borderWidth:1}\n});\n\n\nconst options = {\n        \n  indexAxis: 'y',\n  maintainAspectRatio: false,\n\n  \n\n  elements: {\n    bar: {\n      borderWidth: 1,\n    }\n  },\n  responsive: true,\n  \n  scales: {\n    x: {\n        ticks: {\n            // Include a dollar sign in the ticks\n            callback: function(value, index, values) {\n                return   value +'%';\n            }\n        }\n    }\n}\n\n  ,\n  plugins: {\n    legend: {\n      position: 'right',\n      display: false,\n    },\n    title: {\n      display: false,\n      text:` metres access to open space`\n    }\n  },\n  \n\n};\n\n\n\n\n\nconst BarChart = () => {\n\n    \n    return ( \n        <div style = {{height:'400px'}}>\n        <Bar data = {data} options ={options} />\n        </div>\n\n    )\n\n            \n            \n}\n   \n\nexport default BarChart;\n\n\n\n","import React from 'react';\nimport { LEGEND_COLORS } from './barChart';\nimport './Legend.css'\n\n\n\n\nconst Legend = () => {\n\n   \n\n    return (\n        <>\n     <div id=\"legend\" style ={{fontFamily:\"Roboto, sans-serif\"}}>\n\n         <h4> LEGEND</h4>\n\n   \n      \n      <div className=\"legend-content\">\n          {/* <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_YES.join() })`}}></div>Yes</li> */}\n          { Object.keys(LEGEND_COLORS).map(key=>{\n\n            return <li> <div className='circle' style={{backgroundColor:`rgba(${ LEGEND_COLORS[key].join() })`}}></div>{key} minutes catchment</li>\n\n          })}\n    \n      \n          \n      </div>\n    </div>\n        </>\n    )\n};\n\nexport default Legend;","import React from 'react';\n\nimport './RightBar.css';\n\nimport BarChart   from './barChart';\nimport Legend from './Legend';\n\n\n\n\n\nconst RightBar = () => {\n\n\n \n\n    return (\n        <div className='layer-selector' style= {{fontFamily:\"Roboto, sans-serif\"}}>\n\n            <h3> Access to university by public transport and walking</h3>\n            <p style={{fontSize:\"12px\", color:'gray',lineHeight:'1.4em'}}>\n            The area with at least one trip between 7:00 am to 9:00am on a weekday (Tuesday, 08/06/2021) to its nearest university is considered to have access to universities.\n\n\n                </p>\n\n               \n\n            <Legend />\n            <div style ={{marginTop:'10px', fontSize:'small'}}>\n            <b>% of dwellings that have access to university</b>\n            </div>            \n\n          \n            \n         \n\n           \n            \n            <BarChart />\n            <div>\n                <span style ={{fontSize:'8px'}}>Source: GSC Analysis 2021,TfNSW, DPIE, ABS 2016</span>\n            </div>\n            <span style={{fontSize:\"10px\", color:'gray',lineHeight:'1.1em'}}>\n                Please contact <a href = \"mailto: data@gsc.nsw.gov.au\">data@gsc.nsw.gov.au</a> for more info\n                </span>\n           \n        \n           \n\n        </div>\n    );\n};\n\n\n\nexport default RightBar;","import {CartoLayer,CartoSQLLayer, MAP_TYPES, setDefaultCredentials,BASEMAP} from '@deck.gl/carto';\nimport React, {useState, useCallback,useEffect} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { LEGEND_COLORS } from './barChart';\n\n\n\nconst INITIAL_VIEW_STATE = {\n    latitude: -33.878197,\n    longitude: 151.148648,\n    zoom:10\n  };\n\nsetDefaultCredentials({\nusername: 'gsc-admin',\napiKey: 'default_public'//'fFbU97TNhKdhIO4yYyFjdA'\n});\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYnNuYXlhbiIsImEiOiJja3Ewczd3MW4wN3Z3MnVvNDNsenlzNnFsIn0.f8nk8yrxIeCKOlzIy1b-Pg'\n\nexport const POLYGON_COLORS ={\n    COLOR_YES: [0,0,0,0],\n    COLOR_NO :[248,15,54],\n    COLOR_GREEN :[16,196,118]\n  }\n  \nconst AccessMap = ()=> {\n\n\n   \n     \n  \n    const layerAccess = new CartoLayer({\n      id:'access-uni',\n      type: MAP_TYPES.QUERY,\n      data: 'select the_geom_webmercator, tobreak from serviceareapolygons_rings_universities',\n    \n      getFillColor: object =>[...LEGEND_COLORS[object.properties.tobreak],210],\n      getLineColor: object =>LEGEND_COLORS[object.properties.tobreak],\n      lineWidthMinPixels: .10,\n      pickable: false,\n      \n    });\n\n    const layerUniversity = new CartoLayer({\n      id:'university',\n      type: MAP_TYPES.QUERY,\n      data: 'select the_geom_webmercator, university_campus_name as uni_name from universities',\n    \n      getFillColor: [0,0,0],\n      getLineColor: [255,255,255],\n      lineWidthMinPixels: 1,\n      pointRadiusMinPixels:6,\n      pickable: true,\n      \n    });\n\n    const layerDistrict = new CartoLayer({\n      id:'district',\n      type: MAP_TYPES.QUERY,\n      data: `select the_geom_webmercator, district from \"gsc-admin\".districtboundary `,\n    \n      getFillColor: [0,0,0,0],\n      getLineColor: [35, 35, 35],\n      lineWidthMinPixels: 1.2,\n      \n      pickable: false,\n      \n    });\n\n    \n  \n    const getTooltip = ({object}) => {\n      if (!object) return false;\n      const {district,uni_name} = object.properties;\n      \n  \n      return {\n        html: `<div>University: ${uni_name}</div>`,\n        style:{\n          \n          fontSize: '0.8em'\n         \n        }\n      }\n    };\n\n  \n    return (\n      <div>\n       \n        <DeckGL\n          width=\"100%\"\n          height=\"100%\"\n          initialViewState={INITIAL_VIEW_STATE}\n          getTooltip = {getTooltip}\n          controller={true}\n          layers={[layerAccess,layerDistrict,layerUniversity]}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle= {BASEMAP.PRISTON}//\"mapbox://styles/mapbox/dark-v9\"\n            mapboxApiAccessToken= {MAPBOX_ACCESS_TOKEN}\n            preventStyleDiffing\n          />\n        </DeckGL>\n      </div>\n    );\n  }\n\n\n  export default AccessMap;","import React from 'react';\n\n\nimport RightBar from './components/rightBar';\nimport AccessMap from './components/UniversityAccessMap';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <AccessMap />\n    \n \n      <RightBar />\n\n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}